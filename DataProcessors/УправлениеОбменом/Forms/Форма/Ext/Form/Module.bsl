
&НаСервере
Процедура СброситьВсеЗарегестрированныеНаСервере()
	
	Узлы = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбменМеждуСистемамиБронирования.Ссылка КАК Ссылка
	               |ИЗ
	               |	ПланОбмена.ОбменМеждуСистемамиБронирования КАК ОбменМеждуСистемамиБронирования
	               |ГДЕ
	               |	НЕ ОбменМеждуСистемамиБронирования.ЭтотУзел";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Узлы.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Объекты = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Бронирование.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.Бронирование КАК Бронирование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объекты.Добавить(Выборка.Ссылка);
	КонецЦикла;  
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Узлы, Объекты);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеЗарегестрированные(Команда)
	СброситьВсеЗарегестрированныеНаСервере();
КонецПроцедуры

&НаСервере
Функция ВыгрузитьДанныеXML(ФайлXML)
	
	Поток = Новый ПотокВПамяти;	
	
	//Запись сообщения заголовков обмена XML
		
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьПоток(Поток);         
	
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(Запись, Получатель);        	
	
	ЗаписьСообщения.ЗакончитьЗапись();	  
	Запись.Закрыть();     
	
	
	//Создание временного файла и помещение в него двоичных данных   
	
	//Имя файла
	ИмяФайла =  "Заголовки сообщений обмена";
	
	//Определение пути файла, полного имени
	Каталог = КаталогВременныхФайлов();
	
	ФайлXML = Каталог + ИмяФайла + ".xml"; 
	
	//Файл = ПолучитьИмяВременногоФайла("xml");
	
	//Получение двоичных данных
	ДвоичныеДанные = Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
	//Запись двоичных данных во временный файл
	ДвоичныеДанные.Записать(ФайлXML); 
	
	Возврат ФайлXML;
	
	
КонецФункции    

&НаСервере
Функция ВыгрузитьДанныеJSON(ФайлJSON)  
	
	ДанныеДляОбмена = Новый ТекстовыйДокумент;  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТипНомера.Ссылка КАК Ссылка,
	|	ТипНомера.Код КАК Код,
	|	ТипНомера.Наименование КАК Наименование,
	|	ТипНомера.Количество КАК Количество,
	|	ТипНомера.Цена КАК Цена,
	|	ТипНомера.Описание КАК Описание
	|ИЗ
	|	Справочник.ТипНомера КАК ТипНомера";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеДляОбмена.ДобавитьСтроку("Начало: ТипНомера");
		
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Ссылка.УникальныйИдентификатор())); 
		ДанныеДляОбмена.ДобавитьСтроку(Выборка.Код);
		ДанныеДляОбмена.ДобавитьСтроку(Выборка.Наименование);
		ДанныеДляОбмена.ДобавитьСтроку(XMLСтрока(Выборка.Количество));
		ДанныеДляОбмена.ДобавитьСтроку(XMLСтрока(Выборка.Цена));
		ДанныеДляОбмена.ДобавитьСтроку(СтрЗаменить(Выборка.Описание, Символы.ПС, "\n"));
		
		ДанныеДляОбмена.ДобавитьСтроку("Конец: ТипНомера");
		
	КонецЦикла;
	
	Запрос = Новый Запрос;  
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Постоялец.Ссылка КАК Ссылка,
	|	Постоялец.Код КАК Код,
	|	Постоялец.Наименование КАК Наименование,
	|	Постоялец.Телефон КАК Телефон,
	|	Постоялец.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	|	Постоялец.Пол КАК Пол,
	|	Постоялец.ДатаРождения КАК ДатаРождения
	|ИЗ
	|	Справочник.Постоялец КАК Постоялец";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеДляОбмена.ДобавитьСтроку("Начало: Постояльцы");
		
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Ссылка.УникальныйИдентификатор()));
		ДанныеДляОбмена.ДобавитьСтроку(Выборка.Код);
		ДанныеДляОбмена.ДобавитьСтроку(Выборка.Наименование);
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Телефон));
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.АдресЭлектроннойПочты));
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Пол));
		ДанныеДляОбмена.ДобавитьСтроку(ЗаписатьДатуJSON(Выборка.ДатаРождения, ФорматДатыJSON.ISO));
		
		ДанныеДляОбмена.ДобавитьСтроку("Конец: Постояльцы");
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Бронирование.Ссылка КАК Ссылка,
	|	Бронирование.Номер КАК Номер,
	|	Бронирование.ТипНомера КАК ТипНомера,
	|	Бронирование.ДатаЗаезда КАК ДатаЗаезда,
	|	Бронирование.ДатаВыезда КАК ДатаВыезда,
	|	БронированиеПостояльцы.Постоялец КАК Постоялец
	|ИЗ
	|	Документ.Бронирование.Постояльцы КАК БронированиеПостояльцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Бронирование КАК Бронирование
	|		ПО БронированиеПостояльцы.Ссылка = Бронирование.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеДляОбмена.ДобавитьСтроку("Начало: Бронирование");
		
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Ссылка.УникальныйИдентификатор()));    
		ДанныеДляОбмена.ДобавитьСтроку(Выборка.Номер);
		ДанныеДляОбмена.ДобавитьСтроку(ЗаписатьДатуJSON(Выборка.ДатаЗаезда, ФорматДатыJSON.ISO));
		ДанныеДляОбмена.ДобавитьСтроку(ЗаписатьДатуJSON(Выборка.ДатаВыезда, ФорматДатыJSON.ISO));
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.ТипНомера.УникальныйИдентификатор()));
		ДанныеДляОбмена.ДобавитьСтроку(Строка(Выборка.Постоялец.УникальныйИдентификатор()));		
		ДанныеДляОбмена.ДобавитьСтроку("Конец: Бронирование");
		
	КонецЦикла;
					
	ИмяФайла =  "Данные сообщения обмена";
	
	//Определение пути файла, полного имени
	Каталог = КаталогВременныхФайлов();
	
	ФайлJSON = Каталог + ИмяФайла + ".json";   
	
	ДанныеДляОбмена.Записать(ФайлJSON);
	
	Возврат ФайлJSON;

	
КонецФункции
&НаСервере
Функция ВыгрузитьДанныеJSONВZip(ФайлZIP)
	
	Поток = Новый ПотокВПамяти; 
	
	ФайлJSON = ВыгрузитьДанныеJSON(ФайлJSON);
	
	ФайлZIP = Новый ЗаписьZipФайла;;
	ФайлZIP.Открыть(Поток);   
	ФайлZIP.Добавить(ФайлJSON);
	ФайлZIP.Записать();
	
	ИмяФайла =  "Данные";
	
	//Определение пути файла, полного имени
	Каталог = КаталогВременныхФайлов();
	
	ФайлZIPP = Каталог + ИмяФайла + ".zip"; 
		
	ДвоичныеДанные = Поток.ЗакрытьИПолучитьДвоичныеДанные();  
	
	ДвоичныеДанные.Записать(ФайлZIPP);
	
	Возврат ФайлZIPP;
	
КонецФункции

&НаСервере
Функция ВыгрузитьФайлыВZIPНаСервере()
	
	Поток = Новый ПотокВПамяти;   
	
	ФайлXML = ВыгрузитьДанныеXML(ФайлXML);
	ФайлZIP = ВыгрузитьДанныеJSONВZip(ФайлZIP);
	
	ФайлАрхива = Новый ЗаписьZipФайла;;
	ФайлАрхива.Открыть(Поток);   
	ФайлАрхива.Добавить(ФайлXML);
	ФайлАрхива.Добавить(ФайлZIP);
	ФайлАрхива.Записать(); 
		
	Возврат ПоместитьВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные()); 
	
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьФайлыВZIP(Команда) 
	
	Если Получатель.Пустая() Тогда  
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Получатель должен быть заполнен";
		Сообщение.Поле = "Получатель";
		Сообщение.Сообщить();  
		
		Возврат;  
		
	КонецЕсли;
	
	АдресДанных = ВыгрузитьФайлыВZIPНаСервере(); 
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;  
	
	ПолучитьФайлССервераАсинх(АдресДанных, "Обмен данными.zip", ПараметрыДиалога); 
	
	Сообщить("Данные выгружены в ZIP");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзZIPНаСервере(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);  
	
	Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
	
	ОбменДанными = ПолучитьИмяВременногоФайла("");
	СоздатьКаталог(ОбменДанными);
	
	Архив = Новый ЧтениеZipФайла(Поток);   
	Архив.ИзвлечьВсе(ОбменДанными);
	Архив.Закрыть();	           
	
	//Создание временного каталога и перебор файлов
	Файлы = НайтиФайлы(ОбменДанными, "*.*"); 
	
	Для Каждого Файл из Файлы Цикл 
		
		Если Файл.Расширение = ".zip" Тогда
			
			ИмяФайлаЗип = Файл.ПолноеИмя;    
			
			ОбменДаннымиЗип = ПолучитьИмяВременногоФайла("");
			СоздатьКаталог(ОбменДаннымиЗип);
			
			АрхивСJSON = Новый ЧтениеZipФайла(ИмяФайлаЗип);
			АрхивСJSON.ИзвлечьВсе(ОбменДаннымиЗип);
			АрхивСJSON.Закрыть(); 
			
			ФайлыАрхиваCJson = НайтиФайлы(ОбменДаннымиЗип, "*.*");
			
			Для Каждого ФайлJSON из ФайлыАрхиваCJson Цикл  
				
				Если ФайлJSON.Расширение = ".json"  Тогда 
					
					ИмяФайлаJSON = ФайлJSON.ПолноеИмя;  
					
					Текст = Новый ТекстовыйДокумент;
					Текст.Прочитать(ИмяФайлаJSON);
					
					КоличествоСтрок = Текст.КоличествоСтрок();
					
					РежимРаботы = "ПоискОбъекта";
					
					Для Сч = 1 По КоличествоСтрок Цикл
						
						Строка = Текст.ПолучитьСтроку(Сч);
						
						Если РежимРаботы = "ПоискОбъекта" Тогда
							Если Строка = "Начало: ТипНомера" Тогда
								МенеджерОбъекта = Справочники.ТипНомера;
							ИначеЕсли Строка = "Начало: Бронирование" Тогда 
								МенеджерОбъекта = Документы.Бронирование;  
							ИначеЕсли Строка = "Начало: Постояльцы" Тогда
								МенеджерОбъекта = Справочники.Постоялец;		
							Иначе
								ВызватьИсключение "Некорректный формат файла выгрузки";
							КонецЕсли;
							РежимРаботы = "ЧтениеРеквизитов";
							НомерРеквизита = 0;
							Продолжить;
						КонецЕсли;
						
						Если НомерРеквизита = 0 Тогда
							Ссылка = МенеджерОбъекта.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка));
							ЗагружаемыйОбъект = Ссылка.ПолучитьОбъект();
							Если ЗагружаемыйОбъект = Неопределено Тогда
								Если ТипЗнч(МенеджерОбъекта) = Тип("ДокументМенеджер.Бронирование") Тогда
									ЗагружаемыйОбъект = МенеджерОбъекта.СоздатьДокумент(); 
									ЗагружаемыйОбъект.Дата = ТекущаяДатаСеанса(); 	
								ИначеЕсли ТипЗнч(МенеджерОбъекта) = Тип("СправочникМенеджер.ТипНомера") Тогда
									ЗагружаемыйОбъект = МенеджерОбъекта.СоздатьЭлемент(); 
								ИначеЕсли ТипЗнч(МенеджерОбъекта) = Тип("СправочникМенеджер.Постоялец") Тогда
									ЗагружаемыйОбъект = МенеджерОбъекта.СоздатьЭлемент();
								КонецЕсли;
								ЗагружаемыйОбъект.УстановитьСсылкуНового(Ссылка);
							КонецЕсли;
						ИначеЕсли СтрНачинаетсяС(Строка, "Конец: ") Тогда
							ЗагружаемыйОбъект.ОбменДанными.Загрузка = Истина;
							ЗагружаемыйОбъект.Записать();
							РежимРаботы = "ПоискОбъекта";
						Иначе
							ЗаполнитьЗначениеРеквизитаОбъект(НомерРеквизита, ЗагружаемыйОбъект, Строка);
						КонецЕсли;
						
						НомерРеквизита = НомерРеквизита + 1;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЦикла;
			
			Если Файл.Расширение = ".xml" Тогда
				
				ИмяФайлаОбмена = Файл.ПолноеИмя; 
				
				Чтение = Новый ЧтениеXML;
				Чтение.ОткрытьФайл(ИмяФайлаОбмена); 
				
				ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
				ЧтениеСообщения.НачатьЧтение(Чтение, ДопустимыйНомерСообщения.Любой); 
				
				ЧтениеСообщения.ЗакончитьЧтение();
				Чтение.Закрыть(); 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьЗначениеРеквизитаОбъект(НомерРеквизита, ЗагружаемыйОбъект, Строка)  
		
	Если ТипЗнч(ЗагружаемыйОбъект) = Тип("ДокументОбъект.Бронирование") Тогда
		Если НомерРеквизита = 1 Тогда
			ЗагружаемыйОбъект.Номер = Строка;
		ИначеЕсли НомерРеквизита = 2 Тогда 
			ЗагружаемыйОбъект.ДатаЗаезда = ПрочитатьДатуJSON(Строка, ФорматДатыJSON.ISO);
		ИначеЕсли НомерРеквизита = 3 Тогда 
			ЗагружаемыйОбъект.ДатаВыезда = ПрочитатьДатуJSON(Строка, ФорматДатыJSON.ISO);
		ИначеЕсли НомерРеквизита = 4 Тогда 
			ЗагружаемыйОбъект.ТипНомера =
			Справочники.ТипНомера.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка));			
		КонецЕсли;	  
		
		
	ИначеЕсли ТипЗнч(ЗагружаемыйОбъект) = Тип("СправочникОбъект.ТипНомера") Тогда
		Если НомерРеквизита = 1 Тогда
			ЗагружаемыйОбъект.Код = Строка;
		ИначеЕсли НомерРеквизита = 2 Тогда 
			ЗагружаемыйОбъект.Наименование = Строка;
		ИначеЕсли НомерРеквизита = 3 Тогда 
			ЗагружаемыйОбъект.Количество = Строка;
		ИначеЕсли НомерРеквизита = 4 Тогда 
			ЗагружаемыйОбъект.Цена = Строка;
		ИначеЕсли НомерРеквизита = 5 Тогда 
			ЗагружаемыйОбъект.Описание = СтрЗаменить(Строка, "\n", Символы.ПС);
		КонецЕсли; 
		
	ИначеЕсли ТипЗнч(ЗагружаемыйОбъект) = Тип("СправочникОбъект.Постоялец") Тогда
		Если НомерРеквизита = 1 Тогда
			ЗагружаемыйОбъект.Код = Строка;
		ИначеЕсли НомерРеквизита = 2 Тогда 
			ЗагружаемыйОбъект.Наименование = Строка;
		ИначеЕсли НомерРеквизита = 3 Тогда 
			ЗагружаемыйОбъект.Телефон = Строка;
		ИначеЕсли НомерРеквизита = 4 Тогда 
			ЗагружаемыйОбъект.АдресЭлектроннойПочты = Строка;
		ИначеЕсли НомерРеквизита = 5 Тогда 
			Если Строка = "Женский" Тогда
				ЗагружаемыйОбъект.Пол = ПредопределенноеЗначение("Перечисление.Пол.Женский");
			ИначеЕсли Строка = "Мужской" Тогда
				ЗагружаемыйОбъект.Пол = ПредопределенноеЗначение("Перечисление.Пол.Мужской");	
			КонецЕсли;  		
		ИначеЕсли НомерРеквизита = 6 Тогда 
			ЗагружаемыйОбъект.ДатаРождения = ПрочитатьДатуJSON(Строка, ФорматДатыJSON.ISO);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗагрузитьДанныеИзZIP(Команда)
	
	ПараметрыДиалога =  Новый ПараметрыДиалогаПомещенияФайлов;  
	
	ПараметрыДиалога.Фильтр = "Обмен данными|*.zip;";
	
	Результат = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога);
	
	ЗагрузитьДанныеИзZIPНаСервере(Результат.Адрес);   
	
	Сообщить("Данные загружены из ZIP"); 

КонецПроцедуры
